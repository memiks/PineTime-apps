{
    //  VSCode Debugger Config for Cortex Debug Extension.  We use Cortex Debug because it shows more details, e.g. the STM32 Peripherals.
    "version": "0.2.0",
    "configurations": [
        {
            //  Cortex Debug Configuration: https://marcelball.ca/projects/cortex-debug/cortex-debug-launch-configurations/
            "name": "nRF52832",
            "type": "cortex-debug",
            "request": "launch",
            //  OpenOCD path is defined in workspace.code-workspace.
            "servertype": "openocd",
            "cwd": "${workspaceRoot}",
            //  Application Executable to be flashed before debugging.
            "executable": "apps/pinetime/bin/pinetime/PineTime.elf",
            //  "executable": "apps/terminal_display/bin/pinetime/terminal.elf",
            "device": "nRF52832",
            //  Arm System View Description, from apache-mynewt-core/hw/mcu/nordic/src/ext/nrfx/mdk
            "svdFile": "scripts/nrf52/nrf52.svd",
            "configFiles": [ 
                //  Tell OpenOCD to open the ST Link connection to STM32 MCU.
                "interface/stlink-v2.cfg",
                "target/nrf52.cfg",
                //  Tell OpenOCD to run our custom debug commands.
                "scripts/nrf52/debug.ocd"
            ],
            "preLaunchCommands": [
                //  Before loading the Application, run these gdb commands.
                //  Set timeout for executing openocd commands.
                "set remotetimeout 60",

                //  This indicates that an unrecognized breakpoint location should automatically result in a pending breakpoint being created.
                "set breakpoint pending on"
            
                //  Display the Arm instruction when hitting breakpoint.
                //  "display/i $pc",

                //  Load Bootloader symbols in case we jump to the Bootloader.
                //  "symbol-file bin/targets/bluepill_boot/app/apps/boot/boot.elf",

                //  Restore Application symbols.
                //  "symbol-file bin/targets/bluepill_my_sensor/app/apps/my_sensor_app/my_sensor_app.elf",
            ],
            "postLaunchCommands": [
                //  After loading the Application, run these gdb commands
                "break main",                        //  Break at main()
                "break __assert_func",               //  Break for any C assert failures
                "break os_default_irq",              //  Break for any Mynewt unhandled interrupts
                "break core::panicking::panic",      //  Break for any Rust assert failures and panics
                "break core::result::unwrap_failed"  //  Break for any Rust unwrap and expect failures
            ],
            "preRestartCommands": [
            ],
            "postRestartCommands": [
            ]        
        }
    ]
}